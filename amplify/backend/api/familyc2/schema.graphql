type Family @model @auth(rules: [{allow: private}]) {
  id: ID!
  People: [Person] @connection(keyName: "byFamily", fields: ["id"])
  familyName: String
}

type Person @model @auth(rules: [{allow: private}]) @key(name: "byFamily", fields: ["familyID"]) {
  id: ID!
  userName: String!
  firstName: String
  lastName: String
  phoneNumber: AWSPhone
  tasks: [TaskPerson] @connection(keyName: "byPerson", fields: ["id"])
  email: AWSEmail
  familyID: ID
}

type Task @model @auth(rules: [{allow: groups, groups: ["Managers"], queries: [get, list], mutations: [create, update, delete]}, {allow: groups, groups: ["Employees"], queries: [get, list], mutations: [create, update, delete]}]) {
  id: ID!
  title: String!
  description: String
  status: String
  points: String
  TaskPeople: [TaskPerson] @connection(keyName: "byTask", fields: ["id"])
}

type PrivateNote @model @auth(rules: [{allow: owner}]) {
  id: ID!
  content: String!
}

type TaskPerson @model(queries: null) @key(name: "byTask", fields: ["taskID", "personID"]) @key(name: "byPerson", fields: ["personID", "taskID"]) @auth(rules: [{allow: groups, groups: ["Managers"], queries: [get, list], mutations: [create, update, delete]}, {allow: groups, groups: ["Employees"], queries: [get, list], mutations: [create, update, delete]}, {allow: private}]) {
  id: ID!
  taskID: ID!
  personID: ID!
  task: Task! @connection(fields: ["taskID"])
  person: Person! @connection(fields: ["personID"])
}
 